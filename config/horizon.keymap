/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define SYM 1
#define FUN 2

&lt {
    tapping-term-ms = <180>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        comboESC {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };

        comboGUI {
            bindings = <&kp LEFT_WIN>;
            key-positions = <15 16>;
        };

        comboSKCtrl {
            bindings = <&sk LCTRL>;
            key-positions = <14 15>;
        };

        comboSKAlt {
            bindings = <&sk RALT>;
            key-positions = <20 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE    &kp Q     &kp W     &kp U   &kp R   &kp T                                    &kp Y          &kp U   &kp I   &kp O      &kp P                  &kp MINUS
&kp LCTRL     &kp E     &kp I     &kp A   &kp O   &kp G                                    &kp H          &kp J   &kp K   &kp L      &mt RIGHT_SHIFT ENTER  &kp RIGHT_ALT
&kp LEFT_ALT  &kp Z     &kp X     &kp C   &kp V   &kp B        &trans       &trans         &kp B          &kp N   &kp M   &kp COMMA  &kp PERIOD             &kp SLASH
&kp LCTRL     &kp LGUI  &kp LALT  &trans  &trans  &lt 2 ENTER  &lt 1 SPACE  &mt RSHFT TAB  &kp BACKSPACE  &trans  &trans  &kp RALT   &kp RGUI               &kp RCTRL
            >;
        };

        function_layer {
            bindings = <
&trans     &trans  &kp F9  &kp F10  &kp F11  &kp F12                     &kp HOME            &kp PAGE_DOWN  &kp PAGE_UP       &kp END        &trans         &kp DEL
&kp LCTRL  &trans  &kp F5  &kp F6   &kp F7   &kp F8                      &kp LEFT            &kp DOWN       &kp UP_ARROW      &kp RIGHT      &kp RS(SPACE)  &kp RIGHT_ALT
&trans     &trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans  &trans     &kp RC(LEFT_ARROW)  &kp RC(DOWN)   &kp RC(UP_ARROW)  &kp RC(RIGHT)  &trans         &trans
&trans     &trans  &trans  &trans   &trans   &trans   &trans  &kp RSHFT  &trans              &trans         &trans            &trans         &trans         &trans
            >;
        };

        symbol_layer {
            bindings = <
&kp GRAVE  &kp N1        &kp N2         &kp N3        &kp N4      &kp N5                     &kp N6         &kp N7             &kp N8     &kp N9     &kp N0  &trans
&trans     &trans        &kp BACKSLASH  &kp SQT       &kp COMMA   &trans                     &kp SEMICOLON  &kp LEFT_BRACKET   &kp EQUAL  &kp SLASH  &none   &trans
&trans     &trans        &trans         &kp GRAVE     &kp PERIOD  &trans  &trans  &trans     &trans         &kp RIGHT_BRACKET  &kp MINUS  &trans     &trans  &trans
&trans     &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 3  &trans      &trans  &trans  &kp RSHFT  &bt BT_CLR     &trans             &trans     &trans     &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp Q     &kp B      &kp U      &kp W    &kp Z                   &kp G   &kp F   &kp N   &kp R   &kp P   &trans
&trans  &kp E     &kp I      &kp A      &kp O    &kp X                   &kp H   &kp J   &kp K   &kp L   &kp T   &trans
&trans  &kp FSLH  &kp MINUS  &kp COMMA  &kp DOT  &kp V   &trans  &trans  &kp D   &kp S   &kp M   &kp Y   &kp C   &trans
&trans  &trans    &trans     &trans     &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
